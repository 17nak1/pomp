sQuote("pomp")
nargs()
?nargs()
?is
?missing
myplot <- function(x, y) {
if(missing(y)) {
y <- x
x <- 1:length(y)
}
plot(x, y)}
myplot(1:2)
xor(1,2)
?xor
x=1
!x
y=2
x&y
x|y
x||y
xor(x,y)
missing(x)
missing(y)
missing(z)
myplot <- function(x, y,z) {
if(missing(y)) {
y <- x
x <- 1:length(y)
}
plot(x, y)}
missing(z)
z=NULL
missing(z)
myplot <- function(x, y,z) {
if(missing(y)) {
print(missing((y)))
}
}
myplot(1:2)
myplot <- function(x, y,z) {
if(missing(y)) {
print("l")
}
}
myplot(1:2)
myplot(1:2, y=NULL)
?
measform2pomp
??measform2pomp
help(measform2pomp)
library(pomp)
help(measform2pomp)
map = function(f, deltaT = 1) {
skelType <<- "map"
skelmapDelta_t <<- Nember(deltaT)
if (skelmapDelta_t <= 0) {
throw 'in ‘map’, ‘delta.t’ must be positive.'
}
f
}
map = function(f, deltaT = 1) {
skelType <<- "map"
skelmapDelta_t <<- Nember(deltaT)
if (skelmapDelta_t <= 0) {
}
f
}
map
map(2,1)
map = function(f, deltaT = 1) {
skelType <<- "map"
skelmapDelta_t <<- as.numeric(deltaT)
if (skelmapDelta_t <= 0) {
}
f
}
map(2,1)
y= c(161.50043151766795, 176.3724324110808, 240.39980369771226, 336.6277345045064, 481.544893101322, 700.5457665296191, 1030.0634404565214, 1273.1736242386605, 1081.4592786509468, 1494.0105825023657, 2201.035845390157, 3158.527549102247, 4322.202023963283, 5510.947090927385, 5744.251608330214, 3560.5390269235963, 1962.130583409131, 1081.681673862189, 744.9056142055803, 818.5209756604378, 940.9994262982666, 1034.8592904197803, 900.6628127017204, 1038.2064720090737, 1237.0419116233759, 1396.721151669666, 1012.2515048946957, 963.4729041260489, 1168.787202835466, 1424.7741528584054, 1728.764983443975, 2074.8274212404003, 2446.52705488328, 2527.6732229137733, 1745.607707050525, 1773.4746652515958, 1989.6113247301712, 2203.3570526319986, 2397.09122249564, 2553.912391468625, 2460.7707036427814, 1501.596803916279, 803.0626204928719, 431.8519596158007, 276.8374769560549, 290.19421141508514, 325.505602708067, 358.78855782077665, 308.31616656318846, 348.6041033060213, 416.936808409738, 486.9650415674288, 370.42180999438114, 344.68109042730345, 432.08965575052946, 550.6722120536176, 707.2833057393765, 912.4276553889016, 1177.3246288853102, 1381.719067294186, 1046.3919979730974, 1162.603052840085, 1483.7781696478362, 1875.874765812301, 2329.687708905597, 2820.069701285299, 3106.067604140987, 2107.03071982691, 1199.600662312269, 681.1134132296845, 444.1245925753047, 484.87036193976223, 573.3183934067487, 668.8674215541025, 594.1300021261148, 675.4423148654313, 819.5556210390582, 975.3784916185033, 768.6150879756988, 669.3184790896338, 816.2135809741039, 1006.0139904470932, 1236.9129010670629, 1510.7057707015877, 1824.1985904007608, 2043.7157455719105, 1476.3586153849478, 1433.901361517549, 1657.3893215822104, 1896.0075190053387, 2133.2269480496375, 2352.0204705965807, 2439.7670950987917, 1634.3273760691643, 889.1785311377727, 481.6882003409375, 287.8519665526066, 284.95976101052094, 315.3891609674618)
plot(y)
plot(x)
x=c(180, 271, 423, 465, 523, 649, 624, 556, 420, 423, 488, 441, 268, 260, 163, 83, 60, 41, 48, 65, 82, 145, 122, 194, 237, 318, 450, 671, 1387, 1617, 2058, 3099, 3340, 2965, 1873, 1641, 1122, 884, 591, 427, 282, 174, 127, 84, 97, 68, 88, 79, 58, 85, 75, 121, 174, 209, 458, 742, 929, 1027, 1411, 1885, 2110, 1764, 2001, 2154, 1843, 1427, 970, 726, 416, 218, 160, 160, 188, 224, 298, 436, 482, 468, 650, 796, 1065, 1241, 1230, 1012, 981, 1015, 771, 1031, 1093, 1196, 1076, 1029, 828, 669, 372, 171, 84, 71, 113, 108)
y= c(161.50043151766795, 176.3724324110808, 240.39980369771226, 336.6277345045064, 481.544893101322, 700.5457665296191, 1030.0634404565214, 1273.1736242386605, 1081.4592786509468, 1494.0105825023657, 2201.035845390157, 3158.527549102247, 4322.202023963283, 5510.947090927385, 5744.251608330214, 3560.5390269235963, 1962.130583409131, 1081.681673862189, 744.9056142055803, 818.5209756604378, 940.9994262982666, 1034.8592904197803, 900.6628127017204, 1038.2064720090737, 1237.0419116233759, 1396.721151669666, 1012.2515048946957, 963.4729041260489, 1168.787202835466, 1424.7741528584054, 1728.764983443975, 2074.8274212404003, 2446.52705488328, 2527.6732229137733, 1745.607707050525, 1773.4746652515958, 1989.6113247301712, 2203.3570526319986, 2397.09122249564, 2553.912391468625, 2460.7707036427814, 1501.596803916279, 803.0626204928719, 431.8519596158007, 276.8374769560549, 290.19421141508514, 325.505602708067, 358.78855782077665, 308.31616656318846, 348.6041033060213, 416.936808409738, 486.9650415674288, 370.42180999438114, 344.68109042730345, 432.08965575052946, 550.6722120536176, 707.2833057393765, 912.4276553889016, 1177.3246288853102, 1381.719067294186, 1046.3919979730974, 1162.603052840085, 1483.7781696478362, 1875.874765812301, 2329.687708905597, 2820.069701285299, 3106.067604140987, 2107.03071982691, 1199.600662312269, 681.1134132296845, 444.1245925753047, 484.87036193976223, 573.3183934067487, 668.8674215541025, 594.1300021261148, 675.4423148654313, 819.5556210390582, 975.3784916185033, 768.6150879756988, 669.3184790896338, 816.2135809741039, 1006.0139904470932, 1236.9129010670629, 1510.7057707015877, 1824.1985904007608, 2043.7157455719105, 1476.3586153849478, 1433.901361517549, 1657.3893215822104, 1896.0075190053387, 2133.2269480496375, 2352.0204705965807, 2439.7670950987917, 1634.3273760691643, 889.1785311377727, 481.6882003409375, 287.8519665526066, 284.95976101052094, 315.3891609674618)
plot(x)
length(x)
length(y)
y= c(161.50043151766795, 176.3724324110808, 240.39980369771226, 336.6277345045064, 481.544893101322, 700.5457665296191, 1030.0634404565214, 1273.1736242386605, 1081.4592786509468, 1494.0105825023657, 2201.035845390157, 3158.527549102247, 4322.202023963283, 5510.947090927385, 5744.251608330214, 3560.5390269235963, 1962.130583409131, 1081.681673862189, 744.9056142055803, 818.5209756604378, 940.9994262982666, 1034.8592904197803, 900.6628127017204, 1038.2064720090737, 1237.0419116233759, 1396.721151669666, 1012.2515048946957, 963.4729041260489, 1168.787202835466, 1424.7741528584054, 1728.764983443975, 2074.8274212404003, 2446.52705488328, 2527.6732229137733, 1745.607707050525, 1773.4746652515958, 1989.6113247301712, 2203.3570526319986, 2397.09122249564, 2553.912391468625, 2460.7707036427814, 1501.596803916279, 803.0626204928719, 431.8519596158007, 276.8374769560549, 290.19421141508514, 325.505602708067, 358.78855782077665, 308.31616656318846, 348.6041033060213, 416.936808409738, 486.9650415674288, 370.42180999438114, 344.68109042730345, 432.08965575052946, 550.6722120536176, 707.2833057393765, 912.4276553889016, 1177.3246288853102, 1381.719067294186, 1046.3919979730974, 1162.603052840085, 1483.7781696478362, 1875.874765812301, 2329.687708905597, 2820.069701285299, 3106.067604140987, 2107.03071982691, 1199.600662312269, 681.1134132296845, 444.1245925753047, 484.87036193976223, 573.3183934067487, 668.8674215541025, 594.1300021261148, 675.4423148654313, 819.5556210390582, 975.3784916185033, 768.6150879756988, 669.3184790896338, 816.2135809741039, 1006.0139904470932, 1236.9129010670629, 1510.7057707015877, 1824.1985904007608, 2043.7157455719105, 1476.3586153849478, 1433.901361517549, 1657.3893215822104, 1896.0075190053387, 2133.2269480496375, 2352.0204705965807, 2439.7670950987917, 1634.3273760691643, 889.1785311377727, 481.6882003409375, 287.8519665526066, 284.95976101052094, 315.3891609674618,108)
plot(x)
points(y,col='red')
plot(x)
points(y,col='red', type= 'l')
setwd("~/Downloads/stochmodel3")
rm(list=ls())
source("SetValues.R")
runFilter <- T
samplename <- "Test0"
theme_set(theme_bw()+theme(legend.position = "none"))
Np <- 1e3
nsim <- 1e2
predTime <- c("2020-12-31")
nstageH <- modeltype["nstageH"]
nstageC <- modeltype["nstageC"]
nstageV <- modeltype["nstageV"]
cols <- c(rep("gray", nsim),"red","blue")
convertDate <- function (date, startTime = "2019-12-31") {
out <- as.numeric(as.Date(date)) - as.numeric(as.Date(startTime))
return(out)
}
modelname <- paste0("DetModel",modelnumber)
source("SelectSample.R")
mle <- params
mle["beta_sd"] <- 0.01
mle["dB"] <- 0.2
rm(params)
# if (runFilter) {
source("RunModel.R")
coef(model) <- mle[c(params_mod,params_ic)]
pf <- pfilter(model, filter.mean=T,save.states=T,Np=Np)
pf_table <- as.data.frame(pf)
times <- pf$times
pf_table <- pf@saved.states
Np <- ncol(pf_table[[1]])
source("CreateModel.R")
source("CreateCovars.R")
source("CreateDataset.R")
modelname <- paste0("DetModel",modelnumber)
full_data <- create_dataset(endTime=endTime,predTime=predTime)
covars <- create_covars(endTime)
add_data <- subset(full_data,subset = time>convertDate(endTime) & time<=convertDate(date=predTime))
out <- create_pomp_model(data = add_data, covars=covars, t0 = convertDate(endTime), dt=0.1)
model <- out$model
ind <- length(times)
unifs <- round(1+runif(nsim)*(Np-1))
sims <- NULL
q=1
nsim <- 1#1e2
ind <- length(times)
unifs <- round(1+runif(nsim)*(Np-1))
sims <- NULL
q=1
for (q in 1:nsim) {
temp <- pf_table[[ind]]
temp <- as.data.frame(temp[,unifs[q]])
if (modelname%in% c("DetModel3")) {
S0 <- temp["S",]
EQ0 <- sum(temp[paste0("EQ",seq(1,modeltype["nstageE"])),])
PQ0 <- sum(temp[paste0("PQ",seq(1,modeltype["nstageP"])),])
IQ0 <- sum(temp[paste0("IQ",seq(1,modeltype["nstageI"])),])
E0 <- sum(temp[paste0("E",seq(1,modeltype["nstageE"])),])
P0 <- sum(temp[paste0("P",seq(1,modeltype["nstageP"])),])
I0 <- sum(temp[paste0("I",seq(1,modeltype["nstageI"])),])
H0 <- sum(temp[paste0("H",seq(1,modeltype["nstageH"])),])
C0 <- sum(temp[paste0("C",seq(1,modeltype["nstageC"])),])
V0 <- sum(temp[paste0("V",seq(1,modeltype["nstageV"])),])
M0 <- temp["M",]
R0 <- temp["R",]
}
ic <- c(S0,EQ0,PQ0,IQ0,E0,P0,I0,H0,C0,V0,M0)
ic <- ic / (sum(ic)+R0)
paramset <- mle[c(params_mod,params_ic)]
paramset[params_ic] <- ic
coef(model) <- unlist(paramset)
x <- simulate(model,nsim=1,as.data.frame=TRUE)
pred <- x[,c("time", "reports", "deaths", "hospital", "ICU", "ventilator", "M", "R", "casesI", "casesIQ", "casesH", "deathsIIQ", "deathsCV", "S")]
pred$sim <- q
sims <- rbind(sims,pred)
}
rm(temp, S0, EQ0, PQ0, IQ0, E0, P0, I0, H0, C0, V0, M0, x, pred, ind, unifs, times, q, ic)
full_data$M <- cumsum(full_data$deaths)
full_data$sim <- nsim + 1
states <- pf@filter.mean
# Plot new reported deaths
tests <- approx(covars$time,covars$tests,xout=seq(1,ncol(states)))$y
tests
xout=seq(1,ncol(states))
xout
states
states <- pf@filter.mean
# Plot new reported deaths
tests <- approx(covars$time,covars$tests,xout=seq(1,ncol(states)))$y
tests[is.na(tests)] <- 15
temp <- data.frame(seq(1,ncol(states),by=1),states["casesH",]+coef(model,"rho")*tests/(tests+coef(model,"TF"))*states["casesI",])
temp
tests <- approx(covars$time,covars$tests,xout=seq(1,ncol(states)))$y
tests[is.na(tests)] <- 15
temp <- data.frame(seq(1,ncol(states),by=1),states["casesH",]+coef(model,"rho")*tests/(tests+coef(model,"TF"))*states["casesI",])
temp$sim <- nsim+2
colnames(temp) <- c("time","reports", "sim")
df <- subset(sims, select=c("time","reports","sim"))
df$sim <- as.numeric(df$sim)
df <- rbind(df,full_data[,c("time","reports","sim")],temp)
df$sim <- as.factor(df$sim)
p <- ggplot(df,aes(x=time,y=reports,group=sim)) +
geom_step(aes(color=sim),alpha=0.6) +
scale_color_manual(values= cols) +
geom_vline(xintercept=T1, linetype=1,colour="#808080")  + coord_cartesian(ylim=c(0,1000))
pdf(file=paste0("pred_reports_",modelname,"_DM.pdf"))
plot(p)
dev.off()
plot(p)
temp <- data.frame(seq(1,ncol(states),by=1),states["M",])
temp$sim <- nsim+2
colnames(temp) <- c("time","M", "sim")
df <- subset(sims, select=c("time","M","sim"))
df$sim <- as.numeric(df$sim)
df <- rbind(df,full_data[,c("time","M","sim")],temp)
df$sim <- as.factor(df$sim)
p <- ggplot(df,aes(x=time,y=M,group=sim)) +
geom_step(aes(color=sim),alpha=0.6) +
scale_color_manual(values= cols) +
geom_vline(xintercept=T1, linetype=1,colour="#808080")  + coord_cartesian(ylim=c(0, 3000)) +
ylab("Total deaths")
plot(p)
rgamma(1, 1,2)
rgamma(1, 1,2)
rgamma(1, 1,2)
rgamma(1, 1,2)
rgamma(1, 1,2)
temp <- data.frame(seq(1,ncol(states),by=1),
colSums(states[c(paste0("H",seq(1,nstageH)),paste0("C",seq(1,nstageC)),paste0("V",seq(1,nstageC))),]),
colSums(states[c(paste0("C",seq(1,nstageC)),paste0("V",seq(1,nstageC))),]),
colSums(states[paste0("V",seq(1,nstageC)),]))
temp$sim <- nsim+3
colnames(temp) <- c("time","hospital", "ICU", "ventilator", "sim")
df <- subset(sims,select=c(time,hospital,ICU,ventilator,sim))
df$sim <- as.numeric(df$sim)
df <- rbind(df,full_data[,c("time","hospital","ICU","ventilator", "sim")],temp)
df$sim <- as.factor(df$sim)
df <- melt(df,id=c("time","sim"))
p <- ggplot(df,aes(x=time,y=value,group=sim,col=sim)) +
geom_step(aes(color=sim),alpha=0.6) +
facet_grid(variable ~ .,scale="free_y")  +
scale_color_manual(values= cols)
pdf(file=paste0("pred_hospital_",modelname,"_DM.pdf"))
plot(p)
dev.off()
plot(p)
# Plot susceptible
df <- subset(sims, select=c(time,S,sim))
df$sim <- as.numeric(df$sim)
temp <- data.frame(seq(1,ncol(states),by=1),states["S",])
temp$sim <- nsim+2
colnames(temp) <- c("time","S", "sim")
df <- rbind(df,temp)
df$sim <- as.factor(df$sim)
p <- ggplot(df,aes(x=time,y=S/(10e6),group=sim)) +
geom_step(aes(color=sim),alpha=0.6) +
scale_color_manual(values= cols)  + ylab("Fraction susceptible") +
geom_vline(xintercept=T1, linetype=1,colour="#808080") + coord_cartesian(ylim=c(0.5, 1))
plot(p)
rm(temp)
temp <- data.frame(seq(1,ncol(states),by=1),
colSums(states[c(paste0("H",seq(1,nstageH)),paste0("C",seq(1,nstageC)),paste0("V",seq(1,nstageC))),]),
colSums(states[c(paste0("C",seq(1,nstageC)),paste0("V",seq(1,nstageC))),]),
colSums(states[paste0("V",seq(1,nstageC)),]))
temp$sim <- nsim+3
colnames(temp) <- c("time","hospital", "ICU", "ventilator", "sim")
df <- subset(sims,select=c(time,hospital,ICU,ventilator,sim))
df$sim <- as.numeric(df$sim)
df <- rbind(df,full_data[,c("time","hospital","ICU","ventilator", "sim")],temp)
df$sim <- as.factor(df$sim)
df <- melt(df,id=c("time","sim"))
p <- ggplot(df,aes(x=time,y=value,group=sim,col=sim)) +
geom_step(aes(color=sim),alpha=0.6) +
facet_grid(variable ~ .,scale="free_y")  +
scale_color_manual(values= cols)
pdf(file=paste0("pred_hospital_",modelname,"_DM.pdf"))
plot(p)
dev.off()
plot(p)
df <- subset(sims, select=c(time,S,sim))
df$sim <- as.numeric(df$sim)
temp <- data.frame(seq(1,ncol(states),by=1),states["S",])
temp$sim <- nsim+2
colnames(temp) <- c("time","S", "sim")
df <- rbind(df,temp)
df$sim <- as.factor(df$sim)
p <- ggplot(df,aes(x=time,y=S/(10e6),group=sim)) +
geom_step(aes(color=sim),alpha=0.6) +
scale_color_manual(values= cols)  + ylab("Fraction susceptible") +
geom_vline(xintercept=T1, linetype=1,colour="#808080") + coord_cartesian(ylim=c(0.5, 1))
plot(p)
rm(temp)
temp <- data.frame(seq(1,ncol(states),by=1),
colSums(states[c(paste0("H",seq(1,nstageH)),paste0("C",seq(1,nstageC)),paste0("V",seq(1,nstageC))),]),
colSums(states[c(paste0("C",seq(1,nstageC)),paste0("V",seq(1,nstageC))),]),
colSums(states[paste0("V",seq(1,nstageC)),]))
temp$sim <- nsim+3
colnames(temp) <- c("time","hospital", "ICU", "ventilator", "sim")
df <- subset(sims,select=c(time,hospital,ICU,ventilator,sim))
df$sim <- as.numeric(df$sim)
df <- rbind(df,full_data[,c("time","hospital","ICU","ventilator", "sim")],temp)
df$sim <- as.factor(df$sim)
df <- melt(df,id=c("time","sim"))
p <- ggplot(df,aes(x=time,y=value,group=sim,col=sim)) +
geom_step(aes(color=sim),alpha=0.6) +
facet_grid(variable ~ .,scale="free_y")  +
scale_color_manual(values= cols)
pdf(file=paste0("pred_hospital_",modelname,"_DM.pdf"))
plot(p)
dev.off()
plot(p)
# Plot ICU and hospitalization
temp <- data.frame(seq(1,ncol(states),by=1),
colSums(states[c(paste0("H",seq(1,nstageH)),paste0("C",seq(1,nstageC)),paste0("V",seq(1,nstageC))),]),
colSums(states[c(paste0("C",seq(1,nstageC)),paste0("V",seq(1,nstageC))),]),
colSums(states[paste0("V",seq(1,nstageC)),]))
View(temp)
head(temp)
